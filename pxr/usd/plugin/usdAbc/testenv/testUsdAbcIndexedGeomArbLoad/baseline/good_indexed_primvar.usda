#usda 1.0
(
    defaultPrim = "cube"
    endTimeCode = 1.0000000298
    startTimeCode = 0
    upAxis = "Y"
)

def Mesh "cube"
{
    float3[] extent.timeSamples = {
        1.0000000298: [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)],
    }
    int[] faceVertexCounts.timeSamples = {
        1.0000000298: [4, 4, 4, 4, 4, 4],
    }
    int[] faceVertexIndices.timeSamples = {
        1.0000000298: [0, 1, 2, 3, 4, 5, 2, 1, 6, 7, 5, 4, 0, 3, 7, 6, 5, 7, 3, 2, 6, 4, 1, 0],
    }
    normal3f[] normals (
        interpolation = "faceVarying"
    )
    normal3f[] normals.timeSamples = {
        1.0000000298: [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0)],
    }
    uniform token orientation = "leftHanded"
    point3f[] points (
        interpolation = "vertex"
    )
    point3f[] points.timeSamples = {
        1.0000000298: [(-0.5, -0.5, -0.5), (0.5, -0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, 0.5, -0.5), (0.5, -0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, -0.5, 0.5), (-0.5, 0.5, 0.5)],
    }
    point3f[] primvars:custom (
        interpolation = "faceVarying"
    )
    point3f[] primvars:custom.timeSamples = {
        0: [(0, 0, 1), (0, 0, -1), (0, 1, 0), (0, -1, 0), (1, 0, 0), (-1, 0, 0)],
    }
    int[] primvars:custom:indices (
        interpolation = "faceVarying"
    )
    int[] primvars:custom:indices.timeSamples = {
        0: [1, 1, 1, 1, 4, 4, 4, 4, 0, 0, 0, 0, 5, 5, 5, 5, 2, 2, 2, 2, 3, 3, 3, 3],
    }
    texCoord2f[] primvars:st (
        interpolation = "faceVarying"
    )
    texCoord2f[] primvars:st.timeSamples = {
        1.0000000298: [(0.375, 0), (0.625, 0), (0.375, 0.25), (0.625, 0.25), (0.375, 0.5), (0.625, 0.5), (0.375, 0.75), (0.625, 0.75), (0.375, 1), (0.625, 1), (0.125, 0), (0.875, 0), (0.125, 0.25), (0.875, 0.25)],
    }
    int[] primvars:st:indices (
        interpolation = "faceVarying"
    )
    int[] primvars:st:indices.timeSamples = {
        1.0000000298: [6, 7, 5, 4, 1, 3, 13, 11, 0, 2, 3, 1, 10, 12, 2, 0, 3, 2, 4, 5, 8, 9, 7, 6],
    }
    uniform token subdivisionScheme = "none"
    matrix4d xformOp:transform.timeSamples = {
        1.0000000298: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
    }
    uniform token[] xformOpOrder = ["xformOp:transform"]
}

